import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import javax.swing.*;
import java.applet.*;
import javax.swing.table.DefaultTableModel;
import java.util.*;
public class Calendar1 extends JFrame implements ActionListener,ItemListener
{
 JLabel lbhd = new JLabel("EVENT CALENDER");
 JLabel lbevid = new JLabel("EVENT ID");
 JLabel lbname = new JLabel("EVENT TYPE");
 JLabel lbdate = new JLabel("EVENT DATE");
 JLabel lbenam = new JLabel("ENTER NEW EVENT :-");
 JTextField txtenam = new JTextField();
 JTextField txtevid = new JTextField();
 JComboBox cbname = new JComboBox();
 JTextField txt = new JTextField();
 JButton btn = new JButton("OK");
 JTextField txtdate = new JTextField();
 JButton btnew = new JButton("NEW");
 JButton btsv = new JButton("SAVE");
 JButton btsr = new JButton("SEARCH");
 JButton bted = new JButton("EDIT");
 JButton btcl = new JButton("CANCEL");
 JButton btnad = new JButton("ADD");
 JButton btnre = new JButton("REMOVE");
 String[] col = {"Event List"};
 String tena;
 Object [] []data ={{tena}};
 DefaultTableModel model = new DefaultTableModel(col,0);
 JTable tblen = new JTable(data,col);
 JScrollPane spanel = new JScrollPane(tblen);
 /*JPanel pnl = new JPanel();*/
 Dimension d1 = Toolkit.getDefaultToolkit().getScreenSize();
 public Calendar1 ()
 {
  setLayout(null);
  setVisible(true);
  int x = (int)d1.getWidth();
  int y = (int)d1.getHeight();
  setResizable(false);
  setSize(x,y);
  lbhd.setBounds(490,40,400,40);
  lbevid.setBounds(450,110,100,20);
  txtevid.setBounds(710,110,60,20);
  lbname.setBounds(450,160,120,20);
  cbname.setBounds(710,160,100,20);
  txt.setBounds(830,160,100,20);
  btn.setBounds(950,160,70,20);
  lbdate.setBounds(450,210,120,20);
  txtdate.setBounds(710,210,80,20);
  btnew.setBounds(300,280,140,30);
  btsv.setBounds(460,280,140,30);
  btsr.setBounds(610,280,140,30);
  bted.setBounds(760,280,140,30);
  btcl.setBounds(910,280,140,30);
  lbenam.setBounds(320,400,200,30);
  txtenam.setBounds(410,460,150,30);
  /*pnl.setBounds(420,330,140,30);*/
    tblen.setModel(model);
    spanel.setBounds(590,400,160,200);
  btnad.setBounds(550,630,100,30);
  btnre.setBounds(690,630,100,30);
  add (spanel);
  txtevid.setEditable(false);
  txt.setVisible(false);
  btn.setVisible(false);
  Font f1 = new Font("Monotype Corsiva",Font.BOLD,35);
  Font f2 = new Font("Monotype Corsiva",Font.BOLD,18);
  Font f3 = new Font("Berlin Sans FB",Font.PLAIN,16);
  lbhd.setForeground(new Color(100,0,60));
  lbhd.setFont(f1);
  lbevid.setFont(f2);
  lbname.setFont(f2);
  lbdate.setFont(f2);
  btnew.setFont(f2);
  lbenam.setFont(f2);
  btsv.setFont(f2);
  btsr.setFont(f2);
  txt.setFont(f2);
  btn.setFont(f2);
  bted.setFont(f2);
  btcl.setFont(f2);
  txtevid.setFont(f3);
  txtenam.setFont(f3);
  cbname.setFont(f3);
  txt.setFont(f3);
  btnad.setBackground(new Color(100,0,50));
  btnre.setBackground(new Color(100,0,50));
  btn.setBackground(new Color(100,0,50));
  btnew.setBackground(new Color(100,0,50));
  btsv.setBackground(new Color(100,0,50));
  btsr.setBackground(new Color(100,0,50));
  bted.setBackground(new Color(100,0,50));
  btcl.setBackground(new Color(100,0,50));
  btnad.setForeground(new Color(200,250,150));
  btnre.setForeground(new Color(200,250,150));
  btn.setForeground(new Color(200,250,150));
  btnew.setForeground(new Color(200,250,150));
  btsv.setForeground(new Color(200,250,150));
  btsr.setForeground(new Color(200,250,150));
  bted.setForeground(new Color(200,250,150));
  btcl.setForeground(new Color(200,250,150));
  txtdate.setFont(f3);
  btsv.setEnabled(false);
  bted.setEnabled(false);
  cbname.addItem("--Select--");
  try
  {
     Connection con = DriverManager.getConnection("jdbc:odbc:eventdsn");
     Statement st = con.createStatement();
     ResultSet res1 = st.executeQuery("select distinct ename from evelisttbl order by ename");
     
     while(res1.next())
     {
      cbname.addItem(res1.getString(1));
      }
    cbname.addItem("Others");
   
     }
  catch(Exception ae)
  {
   System.out.println(ae);
   }
  add (lbhd);
  add (lbevid);
  add (lbname);
  add (lbdate);
  add (txtevid);
  add (cbname);
  add (txtdate);
  add (btnew);
  add (btsv);
  add (btsr);
  add (bted);
  add (btcl);
  add (txt);
  add (btn);
  add (btnad);
  add (btnre);
  add (lbenam);
  add (txtenam);
  cbname.addItemListener(this);
  btnew.addActionListener(this);
  btn.addActionListener(this);
  btsv.addActionListener(this);
  btsr.addActionListener(this);
  bted.addActionListener(this);
  btcl.addActionListener(this);
  btnad.addActionListener(this);
  btnre.addActionListener(this);  
repaint();
  }
  public void itemStateChanged(ItemEvent ie)
  {

     txt.setVisible(false);
     btn.setVisible(false);

   if(cbname.getSelectedItem().equals("Others"))
    {
     txt.setVisible(true);
     btn.setVisible(true);
   }
   }
  public void actionPerformed(ActionEvent e)
 {
///////////////
   if(e.getSource() == btnad)
   {
     Vector v=new Vector();
     v.add(txtenam.getText());
     model.addRow(v);
     txtenam.setText("");
   }
///////////////
   if(e.getSource() == btnre)
   {
     model.removeRow(tblen.getSelectedRow());
   }
   if(e.getSource() == btn)
   {
     txt.setVisible(false);
     btn.setVisible(false);
    try
    {
    Connection con = DriverManager.getConnection("jdbc:odbc:eventdsn");
    String str = "insert into evelisttbl(ENAME)values(?)";
    Statement st = con.createStatement();
    ResultSet res1 = st.executeQuery("select distinct ename from evelisttbl order by ename");
    PreparedStatement ps = con.prepareStatement(str);
    ps.setString(1,txt.getText());
    ps.executeUpdate();
    JOptionPane.showMessageDialog(null,"SAVED");
///////////////////////to populate combo from eventlist/////////////
     cbname.addItem(""+txt.getText());
///////////////////////////////////////////////////////////////////
    }
    catch(Exception ee)
    {
     System.out.println(ee);
    }
    }
   if(e.getSource() == btnew)
   {
	   btsv.setEnabled(true);
    txt.setVisible(false);
    txtevid.setText("");
    txtdate.setText("");
    txt.setText("");
    try
    {
     Connection con1 = DriverManager.getConnection("jdbc:odbc:eventdsn");
     Statement st = con1.createStatement();
     ResultSet res1 = st.executeQuery("select * from keytbl");
     while(res1.next())
    {
    txtevid.setText("E/" + res1.getString(3));
    cbname.setSelectedItem("--Select--");
    }
    }
    catch(Exception ee)
    {
     System.out.println(ee);
     }
    }  
   if(e.getSource() == btsv)
   {
	   btsv.setEnabled(false);
   try
   {
    Connection con = DriverManager.getConnection("jdbc:odbc:eventdsn");
    String str = "insert into eventcaltbl(EVENTID,EVENTTYPE,EVENTDATE,EVENTNAME)values(?,?,?,?)";
    String tstr="";
    for(int i=0;i<model.getRowCount();i++)
    {
        tstr=tstr+model.getValueAt(i,0)+",";
    }
    PreparedStatement ps = con.prepareStatement(str);
    ps.setString(1,txtevid.getText());
    ps.setString(2,""+cbname.getSelectedItem());
    ps.setString(3,txtdate.getText());
    ps.setString(4,tstr);

    ps.executeUpdate();
    Statement st = con.createStatement();
    str = "update keytbl set eventid=eventid+1";
    st.executeUpdate(str);
    JOptionPane.showMessageDialog(null,"SAVED");
    }
    catch(Exception ee)
    {
     System.out.println(ee);
    }
    }
   if(e.getSource() == btsr)
    {
		bted.setEditable(true);
    try
    {
     Connection con = DriverManager.getConnection("jdbc:odbc:eventdsn");
     Statement st = con.createStatement();
     String tid = JOptionPane.showInputDialog(null,"Enter Event Id :-");
     ResultSet res = st.executeQuery("select * from eventcaltbl where eventid='"+tid+"'");
     while(res.next())
     {
      txtevid.setText(res.getString(1));
      cbname.setSelectedItem(res.getString(2));
      txtdate.setText(res.getString(3));
     }
    }
    catch(Exception ee)
    {
     System.out.println(ee);
    }
    }
   if(e.getSource() == bted)
   {
	   bted.setEnabled(false);
    try
    {
      Connection con1 = DriverManager.getConnection("jdbc:odbc:eventdsn");
      Statement st1 = con1.createStatement();
      String str=" Update eventcaltbl set eventtype='"+cbname.getSelectedItem()+"',eventdate='"+txtdate.getText()+"' where eventid='"+txtevid.getText()+"'";
      st1.executeUpdate(str);
      JOptionPane.showMessageDialog(null,"UPDATE SAVED");
    }
    catch(Exception ee)
    {
     System.out.println(ee);
     }
   }
   if(e.getSource() == btcl)
   {
    this.dispose();
   }
  }
  public static void main(String args[])
  {
   Calendar1 ca = new Calendar1();
  }
 }