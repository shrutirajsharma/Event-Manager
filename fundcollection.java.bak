import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import javax.swing.*;
import java.applet.*;
import javax.swing.table.DefaultTableModel;
import java.util.*;
public class fundcollection extends JFrame implements ActionListener,FocusListener,ItemListener
{
JLabel lbhd = new JLabel("Fund  Collection");
JLabel lbrec= new JLabel("RECEIPT NO.");
JLabel lbevty = new JLabel("EVENT TYPE");
JLabel lbevna = new JLabel("EVENT NAME");
JLabel lbreg = new JLabel("REGISTRATION NUMBER");
JLabel lbsna = new JLabel("STUDENT NAME");
JLabel lbdate = new JLabel("DATE");
JLabel lbamt = new JLabel("AMOUNT");
JRadioButton rbpa = new JRadioButton("Participants");
JRadioButton rbnpa = new JRadioButton("NON-Participants");
ButtonGroup bg = new ButtonGroup();
String []col = {"EVENT TYPE","EVENT NAME","AMOUNT"};
String evtype,evname,amt;
Object [][]data ={{evtype},{evname},{amt}};
DefaultTableModel model = new DefaultTableModel(col,0);
JTable tblen = new JTable(data,col);
JScrollPane spanel = new JScrollPane(tblen);
//JTextField txtevtype=new JTextField();
JTextField txtrec = new JTextField(); 
JTextField txtevty = new JTextField() ;
JTextField txtreg = new JTextField();
JTextField txtsna = new JTextField();
JComboBox cbevna = new JComboBox();
JComboBox cbety  = new JComboBox(); 
JTextField txtdt = new JTextField();
JTextField txtamt = new JTextField();
JButton btnnew = new JButton("NEW");
JButton btnsv = new JButton("SAVE");
JButton btnsr = new JButton("SEARCH");
JButton btned = new JButton("EDIT");
JButton btncn = new JButton("CANCEL");
Dimension d1 = Toolkit.getDefaultToolkit().getScreenSize();
public fundcollection ()
     {
         setLayout(null);
setVisible(true);
int x = (int)d1.getWidth();
int y = (int)d1.getHeight();
setResizable(false);
setSize(x,y); 
lbhd.setBounds(770,30,400,40);
rbpa.setBounds(790,90,150,20);
rbnpa.setBounds(980,90,150,20);
lbrec.setBounds(770,170,120,20);
txtrec.setBounds(950,170,100,20);
tblen.setModel(model);
spanel.setBounds(1130,100,270,410);
add (spanel);
lbevty.setBounds(770,220,140,20);
//txtevty.setBounds(950,220,120,20);
cbety.setBounds(950,220,120,20);
lbevna.setBounds(770,270,140,20);
cbevna.setBounds(950,270,150,20);
//txtevtype.setBounds(950,270,150,20);
lbreg.setBounds(770,320,150,20);
txtreg.setBounds(950,320,70,20);
lbsna.setBounds(770,370,130,20);
txtsna.setBounds(950,370,120,20);
lbdate.setBounds(770,420,100,20);
txtdt.setBounds(950,420,100,20);
lbamt.setBounds(770,470,130,20);
txtamt.setBounds(950,470,100,20);
btnnew.setBounds(550,520,140,30);
btnsv.setBounds(710,520,140,30);
btnsr.setBounds(870,520,140,30);
btned.setBounds(1020,520,140,30);
btncn.setBounds(1180,520,140,30);
Font f1 = new Font("Monotype Corsiva",Font.BOLD,55);
Font f2 = new Font("Monotype Corsiva",Font.BOLD,18);
Font f3 = new Font("Berlin Sans FB",Font.PLAIN,16);
lbhd.setForeground(new Color(100,0,60));
lbhd.setFont(f1);
lbrec.setFont(f2);
lbevty.setFont(f2);
lbevna.setFont(f2);
lbreg.setFont(f2);
lbsna.setFont(f2);
lbdate.setFont(f2);
lbamt.setFont(f2);
btnnew.setFont(f2);
btnsv.setFont(f2);
btnsr.setFont(f2);
btned.setFont(f2);
btncn.setFont(f2);
txtrec.setFont(f3);
txtevty.setFont(f3);
txtreg.setFont(f3);
txtsna.setFont(f3);
txtdt.setFont(f3);
txtamt.setFont(f3);
cbevna.setFont(f3);
//txtevtype.setFont(f3);
txtsna.setEditable(false);
btnnew.setBackground(new Color(100,0,50));
btnsr.setBackground(new Color(100,0,50));
btnsv.setBackground(new Color(100,0,50));
btncn.setBackground(new Color(100,0,50));
btned.setBackground(new Color(100,0,50));
btnnew.setForeground(new Color(200,250,150));
btnsr.setForeground(new Color(200,250,150));
btnsv.setForeground(new Color(200,250,150));
btned.setForeground(new Color(200,250,150));
btncn.setForeground(new Color(200,250,150));
add (lbhd);
add (lbamt);
add (lbdate);
add (rbpa);
add (rbnpa);
add (lbrec);
add (lbevna);
add (lbevty);
add (lbreg);
add (cbety);
add (cbevna);
add (lbsna);
add (txtamt);
//add (txtevtype);
add (txtrec);
add (txtdt);
//add (txtevid);
add (txtevty);
add (txtreg);
add (txtsna);
add (btncn);
add (btned);
add (btnnew);
add (btnsr);
add (btnsv);
btnnew.addActionListener(this);
btncn.addActionListener(this);
btnsv.addActionListener(this);
btnsr.addActionListener(this);
btned.addActionListener(this);
txtreg.addFocusListener(this);
cbety.addItemListener(this);
cbevna.addItemListener(this);
rbpa.addItemListener(this);
rbnpa.addItemListener(this);
repaint();
}
public void itemStateChanged(ItemEvent ie)
{
	if(rbpa.isSelected())
	{
		lbevna.setVisible(true);
		cbevna.setVisible(true);
	}
	if(rbnpa.isSelected())
	{
		lbevna.setVisible(false);
		cbevna.setVisible(false);
	}
}
public void focusLost(FocusEvent fe)
{   
   /* if(fe.getSource()==txtevid)
{   
             txtevty.setText("");
             cbevna.addItem("--SELECT--"); 
        try
        {
    cbevna.removeAllItems();
    cbevna.addItem("--SELECT--");
    Connection con = DriverManager.getConnection("jdbc:odbc:eventdsn");
    Statement st = con.createStatement();
    String str="Select * from calendar where eventid='"+txtevid.getText()+"'";
    ResultSet res = st.executeQuery(str);
    while(res.next())
   {
    txtevty.setText(res.getString(2));
    String temp[]=res.getString(4).split(",");
    for(int j=0;j<temp.length;j++)
        cbevna.addItem(temp[j]);
   }

}
catch(Exception ee)
{
System.out.println(ee);
}
}*/
    if(fe.getSource()==txtreg)
{  
 txtsna.setText("");    
try
{
	String tevty="",tevna="";
Connection con = DriverManager.getConnection("jdbc:odbc:eventdsn");
    Statement st = con.createStatement();
    String str="Select * from assignmenttbl where regno='"+txtreg.getText()+"'";
    ResultSet res = st.executeQuery(str); 
 
while(res.next())
{
	tevty=res.getString(3);
	tevna=res.getString(4);
    txtsna.setText(res.getString(2));
	cbety.addItem(tevty);
    cbevna.addItem(tevna);
    Vector v=new Vector();
    v.add(tevty);
    v.add(tevna);
    v.add(txtamt.getText());
    model.addRow(v);
}
}


catch(Exception ee)
{
System.out.println(ee);
}
}
}
public void focusGained(FocusEvent fe)
{
}


public void actionPerformed(ActionEvent e)
{
if (e.getSource() == btnnew)
         {
        btnsv.setEnabled(true);
        txtevty.setText("");
	    //txtevtype.setText("");
		cbevna.removeAllItems();
		cbety.removeAllItems();
        txtamt.setText("");
        txtdt.setText("");
        txtreg.setText("");
        txtsna.setText("");
 try
   {
	   String tevty="",tevna="";
   Connection con1 = DriverManager.getConnection("jdbc:odbc:eventdsn");
   Statement st = con1.createStatement();
   String str1 = "insert into fundcolltbl(RECEIPTNO,EVENTYPE,EVENNAME,REGISTRATIONNO,STUDENTNAME,PAIDDATE,AMOUNT)values(?,?,?,?,?,?,?)";
   ResultSet res1 = st.executeQuery("select * from keytable");
   while(res1.next())
   {
    txtrec.setText("R/" + res1.getString(4));
    
    }
   }
   catch(Exception ee)
   {
       System.out.println(ee);
   }


    }
if (e.getSource() == btnsv)
{
btnsv.setEnabled(false);
       if(txtevty.getText().length()!=0&&txtsna.getText().length()!=0&&txtreg.getText().length()!=0&&txtamt.getText().length()!=0&&txtdt.getText().length()!=0)
       { 
                 try
                 {
                     Connection con = DriverManager.getConnection("jdbc:odbc:eventdsn");
                     String str = "insert into fundcolltbl(RECEIPTNO,EVENTID,EVENTYPE,EVENNAME,REGISTRATIONNO,STUDENTNAME,PAIDDATE,AMOUNT)values(?,?,?,?,?,?,?,?)";
                     PreparedStatement ps = con.prepareStatement(str);
					 ps.setString(1,txtrec.getText());
                     ps.setString(2,txtevty.getText());
					 ps.setString(3,""+cbevna.getSelectedItem());
					 ps.setString(4,txtreg.getText());
                     ps.setString(5,txtsna.getText());
					 ps.setString(6,txtdt.getText());
					 ps.setString(7,txtamt.getText());
                     ps.executeUpdate();
                     Statement st = con.createStatement();
					 str = "update keytable set RECEIPTNO=RECEIPTNO+1";
                     st.executeUpdate(str);
                     JOptionPane.showMessageDialog(null,"SAVED");
}
                 catch(Exception ee)
                 {
                     System.out.println(ee);
                 }
             }
            else
        JOptionPane.showMessageDialog(null,"Empty Field Cannot be Saved");
         }
 
		 
if(e.getSource() == btnsr)
        { 
             btned.setEnabled(true);
             try
             { 
                 Connection con = DriverManager.getConnection("jdbc:odbc:eventdsn");
                 Statement st = con.createStatement();
                 String tid = JOptionPane.showInputDialog(null,"Enter Receipt no :-");
				 ResultSet res = st.executeQuery("select * from fundcolltbl where RECEIPTNO='"+tid+"'");
				 while(res.next())
                 {
					txtrec.setText(res.getString(1));
					txtevty.setText(res.getString(2));
					//txtevtype.setText(res.getString(3));
					txtreg.setText(res.getString(4));
					txtsna.setText(res.getString(5));
					txtdt.setText(res.getString(6));
					txtamt.setText(res.getString(7));
                }
				
}
catch(Exception ee)
{
  System.out.println(ee);
}
        }
if (e.getSource() == btned)
{
btned.setEnabled(false);
if(txtevty.getText().length()!=0&&txtsna.getText().length()!=0&&txtreg.getText().length()!=0&&txtamt.getText().length()!=0&&txtdt.getText().length()!=0)
   { 
     try
        {
             Connection con1 = DriverManager.getConnection("jdbc:odbc:eventdsn");
             Statement st1 = con1.createStatement();
             String str= "Update fundcolltbl set eventype='"+txtevty.getText()+"',evenname='"+cbevna.getSelectedItem()+"',studentname='"+txtsna.getText()+"',paiddate='"+txtdt.getText()+"',amount='"+txtamt.getText()+"' where receiptno='"+txtrec.getText()+"'";
			 st1.executeUpdate(str);
             JOptionPane.showMessageDialog(null,"UPDATE SAVED");
        }
        catch(Exception ee)
        {
          System.out.println(ee);
        }
   } 
       else
         JOptionPane.showMessageDialog(null,"Empty Field Cannot be Saved");
}
if (e.getSource() == btncn)
{
this.dispose();
}
   }
public static void main (String args[])
{
fundcollection ob = new fundcollection();
} 
}  
